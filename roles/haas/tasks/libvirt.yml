---
- name: uncomment unix_sock_group in /etc/libvirt/libvirtd.conf
  replace:
    dest=/etc/libvirt/libvirtd.conf
    regexp='(\s+)#unix_sock_group = \"libvirt\"(\s+.*)?$'
    replace='\1unix_sock_group = "libvirt"\2'

- name: uncomment auth_unix_ro = none in /etc/libvirt/libvirtd.conf
  replace:
    dest=/etc/libvirt/libvirtd.conf
    regexp='(\s+)#auth_unix_ro = \"none\"(\s+.*)?$'
    replace='\1auth_unix_ro = "none"\2'

- name: uncomment auth_unix_rw = none in /etc/libvirt/libvirtd.conf
  replace:
    dest=/etc/libvirt/libvirtd.conf
    regexp='(\s+)#auth_unix_rw = \"none\"(\s+.*)?$'
    replace='\1auth_unix_rw = "none"\2'

- name: create libvirt group
  group: name=libvirt state=present

- name: add haas user to libvirt
  user:
    name={{ haas_user }}
    groups=libvirt
    append=yes

# IF CentOS / RHEL
- name: enable and restart libvirtd CentOS/RHEL
  service:
    name=libvirtd
    state=restarted
    enabled=yes
  when: ansible_os_family == 'RedHat'
# END IF

# IF Ubuntu
- name: enable and restart libvirt-bin Ubuntu
  service:
    name=libvirt-bin
    state=restarted
    enabled=yes
  when: ansible_distribution == 'Ubuntu'
# END IF

- name: setup /var/lib/libvirt/images
  file:
    path=/var/lib/libvirt/images
    state=directory
    owner={{ haas_user }}
    group=libvirt

- name: define libvirt pool
  virt_pool:
    command=define
    name=haas_headnodes
    xml='{{ lookup("file", "pool.xml") }}'

- name: attach and autostart libvirt pool
  virt_pool:
    name=haas_headnodes
    state=active
    autostart=yes

- name: copy base.xml
  copy:
    src=base.xml
    dest=/var/lib/haas/
    owner={{ haas_user }}
    group=libvirt
